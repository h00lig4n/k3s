apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: influxdb
  name: influxdb
  namespace: hass
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: influxdb
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: influxdb
    spec:         
      containers:
      - image: docker.io/influxdb:2.7.10
        imagePullPolicy: IfNotPresent
        name: influxdb
        ports:
          - containerPort: 8086
        volumeMounts:
        - mountPath: /var/lib/influxdb2
          name: var-lib-influxdb
        env:
          - name: DOCKER_INFLUXDB_INIT_MODE
            value: setup 
          - name: DOCKER_INFLUXDB_INIT_USERNAME
            valueFrom:
              secretKeyRef:
                name: influxdb
                key: username
          - name: DOCKER_INFLUXDB_INIT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: influxdb
                key: password
          - name: DOCKER_INFLUXDB_INIT_ORG
            valueFrom:
              secretKeyRef:
                name: influxdb
                key: org
          - name: DOCKER_INFLUXDB_INIT_BUCKET
            value: "hass"
          - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
            valueFrom:
              secretKeyRef:
                name: influxdb
                key: token
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "1024Mi"
            cpu: "500m"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      nodeSelector:
        node-role.kubernetes.io/worker: "true"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: var-lib-influxdb
        persistentVolumeClaim:
          claimName: influxdb
