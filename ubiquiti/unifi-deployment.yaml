kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app.kubernetes.io/component: unifi
    app.kubernetes.io/part-of: ubiquiti
    app.kubernetes.io/name: ubiquiti
  name: unifi
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: unifi
      app.kubernetes.io/part-of: ubiquiti
      app.kubernetes.io/name: ubiquiti
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: unifi
        app.kubernetes.io/part-of: ubiquiti
        app.kubernetes.io/name: ubiquiti
    spec:
      containers:
        - name: unifi
          image: docker.io/jacobalberty/unifi:v9.0
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: Europe/Stockholm
            - name: user
              value: unifi
            - name: name
              value: unifi
            - name: LOTSOFDEVICES 
              value: "true"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
            - name: portal
              containerPort: 80
              protocol: TCP
            - name: portal-https
              containerPort: 8843
              protocol: TCP
            - name: stun
              containerPort: 3478
              protocol: UDP
            - name: discovery
              containerPort: 10001
              protocol: UDP
            - name: speed
              containerPort: 6789
              protocol: TCP
          volumeMounts:
            - name: unifi-storage
              mountPath: /unifi
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      nodeSelector:
        node-role.kubernetes.io/worker: "true"
      volumes:
        - name: unifi-storage
          persistentVolumeClaim:
            claimName: unifi
