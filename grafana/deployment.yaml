apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: grafana
  name: grafana
  namespace: hass
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
    spec:
      containers:
      - image: grafana/grafana-oss:12.0.2
        imagePullPolicy: IfNotPresent
        name: grafana
        ports:
          - containerPort: 3000
            name: http-grafana
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /robots.txt
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 2
          failureThreshold: 3
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3000
          timeoutSeconds: 1
        env:
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                name: grafana
                key: username
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: grafana
                key: password
          - name: GF_RENDERING_SERVER_URL
            value: http://localhost:8081/render
          - name: GF_RENDERING_CALLBACK_URL
            value: http://localhost:3000/
          - name: GF_LOG_FILTERS
            value: rendering:debug     
          - name: GF_SECURITY_ALLOW_EMBEDDING
            value: "true"
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "1024Mi"
            cpu: "500m"
        volumeMounts:
          - mountPath: /var/lib/grafana
            name: var-lib-grafana
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      initContainers:
      - image: grafana/grafana-image-renderer:3.11.6
        restartPolicy: Always
        imagePullPolicy: IfNotPresent
        name: grafana-renderer
        ports:
          - containerPort: 8001
            name: http-renderer
            protocol: TCP       
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      nodeSelector:
        node-role.kubernetes.io/worker: "true"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: var-lib-grafana
        persistentVolumeClaim:
          claimName: grafana
