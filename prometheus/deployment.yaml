apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: prometheus
  name: prometheus
  namespace: monitoring
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      containers:
      - image: prom/prometheus-linux-arm64:main
        imagePullPolicy: IfNotPresent
        name: prometheus
        args:
          - '--storage.tsdb.path=/prometheus'
          - '--config.file=/etc/prometheus/prometheus.yml'
        ports:
          - containerPort: 9090
            protocol: TCP
        volumeMounts:
          - name: configuration
            mountPath: /etc/prometheus
          - name: prometheus-pvc
            mountPath: /prometheus
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "1024Mi"
            cpu: "500m"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      nodeSelector:
        node-role.kubernetes.io/worker: "true"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: prometheus-pvc
          persistentVolumeClaim:
            claimName: prometheus
        - name: configuration
          configMap:
            name: prometheus
            defaultMode: 420
