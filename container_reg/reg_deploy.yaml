apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  labels:
    app: docker-registry
    namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
        - image: registry:2
          imagePullPolicy: IfNotPresent
          name: registry
          ports:
            - containerPort: 5000
          env:
            - name: REGISTRY_HTTP_TLS_CERTIFICATE
              value: "/certs/tls.crt"
            - name: REGISTRY_HTTP_TLS_KEY
              value: "/certs/tls.key"
            - name: REGISTRY_STORAGE_DELETE_ENABLED
              value: "true"
          volumeMounts:
          - name: registry-vol
            mountPath: /var/lib/registry
          - name: cert-volume
            readOnly: true
            mountPath: "/certs"
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/worker
        operator: Equal
        value: 'true'
      volumes:
      - name: registry-vol
        persistentVolumeClaim:
          claimName: docker-registry-pv-claim
      - name: cert-volume
        secret:
          secretName: {{mysecret}}
