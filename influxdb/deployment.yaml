apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: influxdb
  name: influxdb
  namespace: hass
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: influxdb
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: influxdb
    spec:         
      containers:
      - image: docker.io/influxdb:latest
        imagePullPolicy: IfNotPresent
        name: influxdb
        ports:
          - containerPort: 8086
        volumeMounts:
        - mountPath: /var/lib/influxdb2
          name: var-lib-influxdb
        env:
          - name: DOCKER_INFLUXDB_INIT_MODE
            value: setup 
          - name: DOCKER_INFLUXDB_INIT_USERNAME
            valueFrom:
              secretKeyRef:
                name: influxdb
                key: username
          - name: DOCKER_INFLUXDB_INIT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: influxdb
                key: password
          - name: DOCKER_INFLUXDB_INIT_ORG
            valueFrom:
              secretKeyRef:
                name: influxdb
                key: org
          - name: DOCKER_INFLUXDB_INIT_BUCKET
            value: "hass"
          - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
            valueFrom:
              secretKeyRef:
                name: influxdb
                key: token
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: Schedule
          key: node-role.kubernetes.io/worker
          operator: Equal
          value: 'true'
      volumes:
      - name: var-lib-influxdb
        persistentVolumeClaim:
          claimName: influxdb-pvc
